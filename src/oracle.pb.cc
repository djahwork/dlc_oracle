// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oracle.proto

#include "oracle.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace oracle {
        template <typename>
PROTOBUF_CONSTEXPR DLCRequest::DLCRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.local_pubkey_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.local_txid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.local_fund_address_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.local_change_address_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.remote_pubkey_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.remote_txid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.remote_fund_address_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.remote_change_address_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DLCRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DLCRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DLCRequestDefaultTypeInternal() {}
  union {
    DLCRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DLCRequestDefaultTypeInternal _DLCRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DLCReply::DLCReply(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.cet_txs_)*/ {},
      /*decltype(_impl_.r_values_)*/ {},
      /*decltype(_impl_.outcome_messages_)*/ {},
      /*decltype(_impl_.fund_tx_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.refund_tx_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DLCReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DLCReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DLCReplyDefaultTypeInternal() {}
  union {
    DLCReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DLCReplyDefaultTypeInternal _DLCReply_default_instance_;
}  // namespace oracle
static ::_pb::Metadata file_level_metadata_oracle_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_oracle_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_oracle_2eproto = nullptr;
const ::uint32_t TableStruct_oracle_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.local_pubkey_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.local_txid_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.local_fund_address_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.local_change_address_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.remote_pubkey_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.remote_txid_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.remote_fund_address_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCRequest, _impl_.remote_change_address_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::oracle::DLCReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::oracle::DLCReply, _impl_.cet_txs_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCReply, _impl_.fund_tx_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCReply, _impl_.refund_tx_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCReply, _impl_.r_values_),
    PROTOBUF_FIELD_OFFSET(::oracle::DLCReply, _impl_.outcome_messages_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::oracle::DLCRequest)},
        {16, -1, -1, sizeof(::oracle::DLCReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::oracle::_DLCRequest_default_instance_._instance,
    &::oracle::_DLCReply_default_instance_._instance,
};
const char descriptor_table_protodef_oracle_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014oracle.proto\022\006oracle\"\330\001\n\nDLCRequest\022\024\n"
    "\014local_pubkey\030\001 \001(\t\022\022\n\nlocal_txid\030\002 \001(\t\022"
    "\032\n\022local_fund_address\030\003 \001(\t\022\034\n\024local_cha"
    "nge_address\030\004 \001(\t\022\025\n\rremote_pubkey\030\005 \001(\t"
    "\022\023\n\013remote_txid\030\006 \001(\t\022\033\n\023remote_fund_add"
    "ress\030\007 \001(\t\022\035\n\025remote_change_address\030\010 \001("
    "\t\"k\n\010DLCReply\022\017\n\007cet_txs\030\001 \003(\t\022\017\n\007fund_t"
    "x\030\002 \001(\t\022\021\n\trefund_tx\030\003 \001(\t\022\020\n\010r_values\030\004"
    " \003(\t\022\030\n\020outcome_messages\030\005 \003(\t28\n\003DLC\0221\n"
    "\tCreateDLC\022\022.oracle.DLCRequest\032\020.oracle."
    "DLCReplyb\006proto3"
};
static ::absl::once_flag descriptor_table_oracle_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_oracle_2eproto = {
    false,
    false,
    416,
    descriptor_table_protodef_oracle_2eproto,
    "oracle.proto",
    &descriptor_table_oracle_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_oracle_2eproto::offsets,
    file_level_metadata_oracle_2eproto,
    file_level_enum_descriptors_oracle_2eproto,
    file_level_service_descriptors_oracle_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_oracle_2eproto_getter() {
  return &descriptor_table_oracle_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_oracle_2eproto(&descriptor_table_oracle_2eproto);
namespace oracle {
// ===================================================================

class DLCRequest::_Internal {
 public:
};

DLCRequest::DLCRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:oracle.DLCRequest)
}
DLCRequest::DLCRequest(const DLCRequest& from) : ::google::protobuf::Message() {
  DLCRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.local_pubkey_){},
      decltype(_impl_.local_txid_){},
      decltype(_impl_.local_fund_address_){},
      decltype(_impl_.local_change_address_){},
      decltype(_impl_.remote_pubkey_){},
      decltype(_impl_.remote_txid_){},
      decltype(_impl_.remote_fund_address_){},
      decltype(_impl_.remote_change_address_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.local_pubkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_pubkey_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_pubkey().empty()) {
    _this->_impl_.local_pubkey_.Set(from._internal_local_pubkey(), _this->GetArenaForAllocation());
  }
  _impl_.local_txid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_txid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_txid().empty()) {
    _this->_impl_.local_txid_.Set(from._internal_local_txid(), _this->GetArenaForAllocation());
  }
  _impl_.local_fund_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_fund_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_fund_address().empty()) {
    _this->_impl_.local_fund_address_.Set(from._internal_local_fund_address(), _this->GetArenaForAllocation());
  }
  _impl_.local_change_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_change_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_change_address().empty()) {
    _this->_impl_.local_change_address_.Set(from._internal_local_change_address(), _this->GetArenaForAllocation());
  }
  _impl_.remote_pubkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_pubkey_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remote_pubkey().empty()) {
    _this->_impl_.remote_pubkey_.Set(from._internal_remote_pubkey(), _this->GetArenaForAllocation());
  }
  _impl_.remote_txid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_txid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remote_txid().empty()) {
    _this->_impl_.remote_txid_.Set(from._internal_remote_txid(), _this->GetArenaForAllocation());
  }
  _impl_.remote_fund_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_fund_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remote_fund_address().empty()) {
    _this->_impl_.remote_fund_address_.Set(from._internal_remote_fund_address(), _this->GetArenaForAllocation());
  }
  _impl_.remote_change_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_change_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remote_change_address().empty()) {
    _this->_impl_.remote_change_address_.Set(from._internal_remote_change_address(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:oracle.DLCRequest)
}
inline void DLCRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.local_pubkey_){},
      decltype(_impl_.local_txid_){},
      decltype(_impl_.local_fund_address_){},
      decltype(_impl_.local_change_address_){},
      decltype(_impl_.remote_pubkey_){},
      decltype(_impl_.remote_txid_){},
      decltype(_impl_.remote_fund_address_){},
      decltype(_impl_.remote_change_address_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.local_pubkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_pubkey_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.local_txid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_txid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.local_fund_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_fund_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.local_change_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.local_change_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remote_pubkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_pubkey_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remote_txid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_txid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remote_fund_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_fund_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remote_change_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_change_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
DLCRequest::~DLCRequest() {
  // @@protoc_insertion_point(destructor:oracle.DLCRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DLCRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.local_pubkey_.Destroy();
  _impl_.local_txid_.Destroy();
  _impl_.local_fund_address_.Destroy();
  _impl_.local_change_address_.Destroy();
  _impl_.remote_pubkey_.Destroy();
  _impl_.remote_txid_.Destroy();
  _impl_.remote_fund_address_.Destroy();
  _impl_.remote_change_address_.Destroy();
}
void DLCRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DLCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oracle.DLCRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.local_pubkey_.ClearToEmpty();
  _impl_.local_txid_.ClearToEmpty();
  _impl_.local_fund_address_.ClearToEmpty();
  _impl_.local_change_address_.ClearToEmpty();
  _impl_.remote_pubkey_.ClearToEmpty();
  _impl_.remote_txid_.ClearToEmpty();
  _impl_.remote_fund_address_.ClearToEmpty();
  _impl_.remote_change_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DLCRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 158, 2> DLCRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DLCRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_change_address = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_change_address_)}},
    // string local_pubkey = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_pubkey_)}},
    // string local_txid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_txid_)}},
    // string local_fund_address = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_fund_address_)}},
    // string local_change_address = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_change_address_)}},
    // string remote_pubkey = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_pubkey_)}},
    // string remote_txid = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_txid_)}},
    // string remote_fund_address = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_fund_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string local_pubkey = 1;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_pubkey_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string local_txid = 2;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_txid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string local_fund_address = 3;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_fund_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string local_change_address = 4;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.local_change_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote_pubkey = 5;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_pubkey_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote_txid = 6;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_txid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote_fund_address = 7;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_fund_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote_change_address = 8;
    {PROTOBUF_FIELD_OFFSET(DLCRequest, _impl_.remote_change_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\14\12\22\24\15\13\23\25\0\0\0\0\0\0\0"
    "oracle.DLCRequest"
    "local_pubkey"
    "local_txid"
    "local_fund_address"
    "local_change_address"
    "remote_pubkey"
    "remote_txid"
    "remote_fund_address"
    "remote_change_address"
  }},
};

::uint8_t* DLCRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oracle.DLCRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string local_pubkey = 1;
  if (!this->_internal_local_pubkey().empty()) {
    const std::string& _s = this->_internal_local_pubkey();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.local_pubkey");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string local_txid = 2;
  if (!this->_internal_local_txid().empty()) {
    const std::string& _s = this->_internal_local_txid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.local_txid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string local_fund_address = 3;
  if (!this->_internal_local_fund_address().empty()) {
    const std::string& _s = this->_internal_local_fund_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.local_fund_address");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string local_change_address = 4;
  if (!this->_internal_local_change_address().empty()) {
    const std::string& _s = this->_internal_local_change_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.local_change_address");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string remote_pubkey = 5;
  if (!this->_internal_remote_pubkey().empty()) {
    const std::string& _s = this->_internal_remote_pubkey();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.remote_pubkey");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string remote_txid = 6;
  if (!this->_internal_remote_txid().empty()) {
    const std::string& _s = this->_internal_remote_txid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.remote_txid");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string remote_fund_address = 7;
  if (!this->_internal_remote_fund_address().empty()) {
    const std::string& _s = this->_internal_remote_fund_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.remote_fund_address");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string remote_change_address = 8;
  if (!this->_internal_remote_change_address().empty()) {
    const std::string& _s = this->_internal_remote_change_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCRequest.remote_change_address");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oracle.DLCRequest)
  return target;
}

::size_t DLCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oracle.DLCRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string local_pubkey = 1;
  if (!this->_internal_local_pubkey().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_pubkey());
  }

  // string local_txid = 2;
  if (!this->_internal_local_txid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_txid());
  }

  // string local_fund_address = 3;
  if (!this->_internal_local_fund_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_fund_address());
  }

  // string local_change_address = 4;
  if (!this->_internal_local_change_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_change_address());
  }

  // string remote_pubkey = 5;
  if (!this->_internal_remote_pubkey().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_pubkey());
  }

  // string remote_txid = 6;
  if (!this->_internal_remote_txid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_txid());
  }

  // string remote_fund_address = 7;
  if (!this->_internal_remote_fund_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_fund_address());
  }

  // string remote_change_address = 8;
  if (!this->_internal_remote_change_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_change_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DLCRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DLCRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*DLCRequest::GetClassData() const { return &_class_data_; }


void DLCRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DLCRequest*>(&to_msg);
  auto& from = static_cast<const DLCRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oracle.DLCRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_local_pubkey().empty()) {
    _this->_internal_set_local_pubkey(from._internal_local_pubkey());
  }
  if (!from._internal_local_txid().empty()) {
    _this->_internal_set_local_txid(from._internal_local_txid());
  }
  if (!from._internal_local_fund_address().empty()) {
    _this->_internal_set_local_fund_address(from._internal_local_fund_address());
  }
  if (!from._internal_local_change_address().empty()) {
    _this->_internal_set_local_change_address(from._internal_local_change_address());
  }
  if (!from._internal_remote_pubkey().empty()) {
    _this->_internal_set_remote_pubkey(from._internal_remote_pubkey());
  }
  if (!from._internal_remote_txid().empty()) {
    _this->_internal_set_remote_txid(from._internal_remote_txid());
  }
  if (!from._internal_remote_fund_address().empty()) {
    _this->_internal_set_remote_fund_address(from._internal_remote_fund_address());
  }
  if (!from._internal_remote_change_address().empty()) {
    _this->_internal_set_remote_change_address(from._internal_remote_change_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DLCRequest::CopyFrom(const DLCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oracle.DLCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DLCRequest::IsInitialized() const {
  return true;
}

void DLCRequest::InternalSwap(DLCRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_pubkey_, lhs_arena,
                                       &other->_impl_.local_pubkey_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_txid_, lhs_arena,
                                       &other->_impl_.local_txid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_fund_address_, lhs_arena,
                                       &other->_impl_.local_fund_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_change_address_, lhs_arena,
                                       &other->_impl_.local_change_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_pubkey_, lhs_arena,
                                       &other->_impl_.remote_pubkey_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_txid_, lhs_arena,
                                       &other->_impl_.remote_txid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_fund_address_, lhs_arena,
                                       &other->_impl_.remote_fund_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_change_address_, lhs_arena,
                                       &other->_impl_.remote_change_address_, rhs_arena);
}

::google::protobuf::Metadata DLCRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_oracle_2eproto_getter, &descriptor_table_oracle_2eproto_once,
      file_level_metadata_oracle_2eproto[0]);
}
// ===================================================================

class DLCReply::_Internal {
 public:
};

DLCReply::DLCReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:oracle.DLCReply)
}
DLCReply::DLCReply(const DLCReply& from) : ::google::protobuf::Message() {
  DLCReply* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cet_txs_){from._impl_.cet_txs_},
      decltype(_impl_.r_values_){from._impl_.r_values_},
      decltype(_impl_.outcome_messages_){from._impl_.outcome_messages_},
      decltype(_impl_.fund_tx_){},
      decltype(_impl_.refund_tx_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.fund_tx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fund_tx_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fund_tx().empty()) {
    _this->_impl_.fund_tx_.Set(from._internal_fund_tx(), _this->GetArenaForAllocation());
  }
  _impl_.refund_tx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.refund_tx_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_refund_tx().empty()) {
    _this->_impl_.refund_tx_.Set(from._internal_refund_tx(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:oracle.DLCReply)
}
inline void DLCReply::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.cet_txs_){arena},
      decltype(_impl_.r_values_){arena},
      decltype(_impl_.outcome_messages_){arena},
      decltype(_impl_.fund_tx_){},
      decltype(_impl_.refund_tx_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.fund_tx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fund_tx_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.refund_tx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.refund_tx_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
DLCReply::~DLCReply() {
  // @@protoc_insertion_point(destructor:oracle.DLCReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DLCReply::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_cet_txs()->~RepeatedPtrField();
  _internal_mutable_r_values()->~RepeatedPtrField();
  _internal_mutable_outcome_messages()->~RepeatedPtrField();
  _impl_.fund_tx_.Destroy();
  _impl_.refund_tx_.Destroy();
}
void DLCReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DLCReply::Clear() {
// @@protoc_insertion_point(message_clear_start:oracle.DLCReply)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_cet_txs()->Clear();
  _internal_mutable_r_values()->Clear();
  _internal_mutable_outcome_messages()->Clear();
  _impl_.fund_tx_.ClearToEmpty();
  _impl_.refund_tx_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DLCReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 71, 2> DLCReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DLCReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string cet_txs = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.cet_txs_)}},
    // string fund_tx = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.fund_tx_)}},
    // string refund_tx = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.refund_tx_)}},
    // repeated string r_values = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.r_values_)}},
    // repeated string outcome_messages = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.outcome_messages_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string cet_txs = 1;
    {PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.cet_txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string fund_tx = 2;
    {PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.fund_tx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string refund_tx = 3;
    {PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.refund_tx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string r_values = 4;
    {PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.r_values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string outcome_messages = 5;
    {PROTOBUF_FIELD_OFFSET(DLCReply, _impl_.outcome_messages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\17\7\7\11\10\20\0\0"
    "oracle.DLCReply"
    "cet_txs"
    "fund_tx"
    "refund_tx"
    "r_values"
    "outcome_messages"
  }},
};

::uint8_t* DLCReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:oracle.DLCReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string cet_txs = 1;
  for (int i = 0, n = this->_internal_cet_txs_size(); i < n; ++i) {
    const auto& s = this->_internal_cet_txs().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCReply.cet_txs");
    target = stream->WriteString(1, s, target);
  }

  // string fund_tx = 2;
  if (!this->_internal_fund_tx().empty()) {
    const std::string& _s = this->_internal_fund_tx();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCReply.fund_tx");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string refund_tx = 3;
  if (!this->_internal_refund_tx().empty()) {
    const std::string& _s = this->_internal_refund_tx();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCReply.refund_tx");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated string r_values = 4;
  for (int i = 0, n = this->_internal_r_values_size(); i < n; ++i) {
    const auto& s = this->_internal_r_values().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCReply.r_values");
    target = stream->WriteString(4, s, target);
  }

  // repeated string outcome_messages = 5;
  for (int i = 0, n = this->_internal_outcome_messages_size(); i < n; ++i) {
    const auto& s = this->_internal_outcome_messages().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "oracle.DLCReply.outcome_messages");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oracle.DLCReply)
  return target;
}

::size_t DLCReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oracle.DLCReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string cet_txs = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_cet_txs().size());
  for (int i = 0, n = _internal_cet_txs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_cet_txs().Get(i));
  }
  // repeated string r_values = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_r_values().size());
  for (int i = 0, n = _internal_r_values().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_r_values().Get(i));
  }
  // repeated string outcome_messages = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_outcome_messages().size());
  for (int i = 0, n = _internal_outcome_messages().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_outcome_messages().Get(i));
  }
  // string fund_tx = 2;
  if (!this->_internal_fund_tx().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_fund_tx());
  }

  // string refund_tx = 3;
  if (!this->_internal_refund_tx().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_refund_tx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DLCReply::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DLCReply::MergeImpl
};
const ::google::protobuf::Message::ClassData*DLCReply::GetClassData() const { return &_class_data_; }


void DLCReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DLCReply*>(&to_msg);
  auto& from = static_cast<const DLCReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:oracle.DLCReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cet_txs()->MergeFrom(from._internal_cet_txs());
  _this->_internal_mutable_r_values()->MergeFrom(from._internal_r_values());
  _this->_internal_mutable_outcome_messages()->MergeFrom(from._internal_outcome_messages());
  if (!from._internal_fund_tx().empty()) {
    _this->_internal_set_fund_tx(from._internal_fund_tx());
  }
  if (!from._internal_refund_tx().empty()) {
    _this->_internal_set_refund_tx(from._internal_refund_tx());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DLCReply::CopyFrom(const DLCReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oracle.DLCReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DLCReply::IsInitialized() const {
  return true;
}

void DLCReply::InternalSwap(DLCReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cet_txs_.InternalSwap(&other->_impl_.cet_txs_);
  _impl_.r_values_.InternalSwap(&other->_impl_.r_values_);
  _impl_.outcome_messages_.InternalSwap(&other->_impl_.outcome_messages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fund_tx_, lhs_arena,
                                       &other->_impl_.fund_tx_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.refund_tx_, lhs_arena,
                                       &other->_impl_.refund_tx_, rhs_arena);
}

::google::protobuf::Metadata DLCReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_oracle_2eproto_getter, &descriptor_table_oracle_2eproto_once,
      file_level_metadata_oracle_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace oracle
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
